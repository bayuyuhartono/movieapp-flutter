name: Flutter Fastlane CI/CD

on:
  push:
    branches:
      - cicd-setup
  pull_request:
    branches:
      - cicd-setup

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create key.properties file
        run: |
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "storeFile=${{ github.workspace }}/android/app/keystore.jks" >> android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties

      - name: Decode and save keystore file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      
      - name: Create Google Play API Key
        run: echo '${{ secrets.GOOGLE_PLAY_KEY }}' > android/fastlane/google_play_key.json

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'

      - name: Install dependencies
        run: flutter pub get

      # - name: Build APK
      #   run: flutter build apk --release
      
      # - name: Build AAB
      #   run: flutter build appbundle --release

      # - name: Debug Output Files
      #   run: ls -R build/app/outputs/bundle/release/

      - name: Setup Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install Fastlane dependencies
        run: bundle install
        working-directory: android

      - name: Make Gradle Executable
        run: chmod +x android/gradlew

      - name: Run Fastlane
        run: bundle exec fastlane android internal
        working-directory: android
        env:
          GOOGLE_PLAY_KEY: ${{ secrets.GOOGLE_PLAY_KEY }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
